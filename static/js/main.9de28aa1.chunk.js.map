{"version":3,"sources":["store/loading.ts","hooks/useLoading.ts","api/movie.ts","api/init.ts","container/MovieContainer.tsx","page/Movie.tsx","component/MovieList.tsx","hooks/useScroll.ts","store/movies.ts","container/MovieListContainer.tsx","page/MovieList.tsx","component/Loading.tsx","App.tsx","reportWebVitals.ts","store/counter.ts","store/index.ts","index.tsx","container/MovieContainer.module.scss","component/MovieList.module.scss"],"names":["loadingSlice","createSlice","name","initialState","loading","success","error","reducers","state","action","payload","actions","useLoading","useSelector","dispatch","useDispatch","handleLoading","type","onLoading","requsetGetMovie","axiosInstance","axios","create","baseURL","timeout","retry","errorConfig","Promise","resolve","setTimeout","console","log","request","interceptors","use","config","e","reject","response","res","customAxiosInstance","id","source","a","URL","get","cancelToken","token","requestGetMovieList","page","MovieContainer","useState","setState","useRef","height","setHeight","open","setOpen","callGetMovie","data","status","movie","scrollControl","scroll","window","scrollY","useEffect","addEventListener","removeEventListener","scrollTo","className","styles","src","large_cover_image","alt","title","style","backgroundImage","transform","filter","onClick","title_long","description_full","Movie","match","params","CellMeasurerCache","defaultWidth","fixedWidth","MovieItem","onLoad","history","useHistory","medium_cover_image","rating","ButtonBase","push","MovieList","list","movies","map","React","memo","useScroll","scrollEnd","setScrollEnd","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","get_movies_saga","movie_saga","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","getMovies","createAction","api","put","takeEvery","createReducer","concat","MovieListContainer","length","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","Loading","classes","Backdrop","CircularProgress","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterSlice","value","increment","decrement","incrementByAmount","rootSaga","all","rootReducer","combineReducers","counter","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","devTools","process","run","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9de28aa1.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface LoadingState {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: false,\r\n  error: false,\r\n} as LoadingState;\r\n\r\nexport const loadingSlice = createSlice({\r\n  name: 'loading',\r\n  initialState,\r\n  reducers: {\r\n    loading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loading } = loadingSlice.actions;\r\nexport default loadingSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { loading as onLoading } from '../store/loading';\r\n\r\nconst useLoading = () => {\r\n  const { loading } = useSelector((state: RootState) => state.loading);\r\n  const dispatch = useDispatch();\r\n  const handleLoading = (type: boolean) => {\r\n    dispatch(onLoading(type));\r\n  };\r\n  return { loading, handleLoading };\r\n};\r\n\r\nexport default useLoading;\r\n","import axios from 'axios';\r\nimport { customAxiosInstance, cancleToken } from './init';\r\nconst instance = customAxiosInstance();\r\n\r\nexport const requsetGetMovie = async (id: string, source: any): Promise<any> => {\r\n  const URL = `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`;\r\n  const res = await axios.get(URL, { cancelToken: source.token });\r\n  return res;\r\n};\r\n\r\nexport const requestGetMovieList = async (page: number): Promise<any> => {\r\n  const URL = `https://yts-proxy.now.sh/list_movies.json?limit=24&&sort_by=download_count&page=${page}`;\r\n  const res = await axios.get(URL);\r\n  return res;\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const cancleToken = () => {\r\n  const CancelToken = axios.CancelToken;\r\n  const source = CancelToken.source();\r\n  return source;\r\n};\r\n\r\nexport const customAxiosInstance = () => {\r\n  const axiosInstance = axios.create({\r\n    baseURL: 'https://yts.mx',\r\n    timeout: 5000,\r\n  });\r\n\r\n  // HTTP status가 2xx일 때 처리하고 싶은 로직이 있으면 onFulfilled에서 처리\r\n  const onFulfilled = (res: any) => res;\r\n\r\n  // response에 에러가 있을 시.\r\n  const onRejected = (error: any) => {\r\n    if (error.config) {\r\n      console.log(error);\r\n      return retry(error.config);\r\n    }\r\n    return Promise.reject(error);\r\n  };\r\n\r\n  //재시도.\r\n  const retry = (errorConfig: any) => {\r\n    return new Promise((resolve: any) => {\r\n      setTimeout(() => {\r\n        console.log('retry');\r\n        resolve(axiosInstance.request(errorConfig));\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  //요청전 수행할 일.\r\n  const requestPrev = (config: any) => {\r\n    console.log('요청 전');\r\n    return config;\r\n  };\r\n\r\n  //요청전 에러가 있다.\r\n  const requestError = (e: any) => {\r\n    console.log('오류 요청 전 수행할 일');\r\n    console.log(e);\r\n    return Promise.reject(e);\r\n  };\r\n\r\n  axiosInstance.interceptors.request.use(requestPrev, requestError);\r\n  axiosInstance.interceptors.response.use(onFulfilled, onRejected);\r\n  return axiosInstance;\r\n};\r\n","//hooks\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport useLoading from '../hooks/useLoading';\r\nimport styles from './MovieContainer.module.scss';\r\n\r\nimport Genres from '../component/Genres';\r\nimport { Movie } from '../types/Movie';\r\n//api\r\nimport { requsetGetMovie } from '../api/movie';\r\nimport axios, { CancelToken } from 'axios';\r\n\r\nimport BottomModal from '../component/BottomModal';\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\n\r\ninterface State extends Movie {\r\n  background_image: string;\r\n  background_image_original: string;\r\n  date_uploaded: string;\r\n  date_uploaded_unix: number;\r\n  description_intro: string;\r\n  download_count: number;\r\n  genres: string[] | undefined;\r\n  imdb_code: string;\r\n  language: string;\r\n  large_cover_image: string;\r\n  like_count: number;\r\n  mpa_rating: string;\r\n  runtime: number;\r\n  slug: string;\r\n  small_cover_image: string;\r\n  title_english: string;\r\n  title_long: string;\r\n  torrents: object[];\r\n  url: string;\r\n  year: number;\r\n  yt_trailer_code: string;\r\n}\r\nfunction MovieContainer({ id }: Props) {\r\n  const [state, setState] = useState<State>();\r\n  const { handleLoading } = useLoading();\r\n  const source = useRef<any>(null);\r\n  const [value, setValue] = useState<string>('');\r\n  const [height, setHeight] = useState<number>(1);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const onChange = () => setOpen(false);\r\n\r\n  const callGetMovie = async () => {\r\n    try {\r\n      handleLoading(true);\r\n      const res = await requsetGetMovie(id, source);\r\n      console.log(res);\r\n      if (res?.data?.status === 'ok') {\r\n        setState(res.data.data.movie);\r\n      }\r\n      handleLoading(false);\r\n    } catch (e) {\r\n      handleLoading(false);\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const scrollControl = () => {\r\n    let scroll = window.scrollY;\r\n    setHeight(scroll);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', scrollControl);\r\n    return () => window.removeEventListener('scroll', scrollControl);\r\n  }, []);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    callGetMovie();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(open);\r\n  }, [open]);\r\n  return (\r\n    <>\r\n      <div className={styles['container']}>\r\n        <div className={styles['content']}>\r\n          <div className={styles['movie-poster']}>\r\n            <img src={state?.large_cover_image} alt={state?.title} />\r\n          </div>\r\n          <div className={styles['mobile-wrap']}>\r\n            <div\r\n              className={styles['mobile-movie-poster']}\r\n              style={{\r\n                backgroundImage: `url(${state?.large_cover_image})`,\r\n                transform: `translate3d(0%,${height / 100}% ,0) scale(${100 + height / 2 / 10}%)`,\r\n                filter: `blur(${height / 100}px)`,\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['movie-content']}>\r\n            <div className={styles['movie-title']} onClick={() => setOpen(!open)}>\r\n              {state?.title_long}\r\n            </div>\r\n            <div className={styles['movie-descript']}>\r\n              {state?.description_full}\r\n              {state?.description_full}\r\n\r\n              {state?.description_full}\r\n            </div>\r\n            {/* <div className={styles['movie-rating']}>\r\n                        <Genres genres ={state?.genres}/>\r\n                    </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <BottomModal state={open} touchSize={100} delta={50} className={styles['filter']} onChangeState={() => setOpen(false)}>\r\n        <div className={styles['test']}>gd</div>\r\n      </BottomModal> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","import MovieContainer from '../container/MovieContainer';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\n\r\ninterface MatchParams{\r\n    id: string\r\n}\r\n\r\nfunction Movie({match} :RouteComponentProps<MatchParams>){\r\n    const {id}= match.params;\r\n    return(\r\n        <MovieContainer id={id}/>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React, { useCallback, useRef } from 'react';\r\nimport styles from './MovieList.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ButtonBase } from '@material-ui/core';\r\nimport { WindowScroller, CellMeasurer, CellMeasurerCache, AutoSizer, List, ListRowProps } from 'react-virtualized';\r\n\r\nimport { Movie } from '../types/Movie';\r\n\r\ntype MovieItemProps = {\r\n  movie: Movie;\r\n  onLoad?: any;\r\n};\r\ntype MovieListProps = {\r\n  movies: Movie[];\r\n};\r\n\r\nconst cache = new CellMeasurerCache({\r\n  defaultWidth: 50,\r\n  fixedWidth: true,\r\n});\r\n\r\nfunction MovieItem({ movie, onLoad }: MovieItemProps) {\r\n  const history = useHistory();\r\n\r\n  const { id, medium_cover_image, title, rating, description_full } = movie;\r\n\r\n  const onClickItem = () => {\r\n    history.push(`/detail/${id}`);\r\n  };\r\n  return (\r\n    <ButtonBase className={styles['movie-item']} onClick={onClickItem}>\r\n      <div className={styles['movie-block']}>\r\n        <div className={styles['movie-poster']}>\r\n          <img src={medium_cover_image} alt={title} onLoad={onLoad} />\r\n        </div>\r\n        <div className={styles['movie-title']}>{title}</div>\r\n        <div className={styles['movie-description']}>{description_full}</div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n}\r\n\r\nfunction MovieList({ movies }: MovieListProps) {\r\n  const list = movies.map((movie: Movie) => <MovieItem key={movie.id} movie={movie} />);\r\n  // const listRef = useRef<List | null>(null);\r\n\r\n  // const rowRenderer = ({ index, key, parent, style }: ListRowProps) => {\r\n  //   const movie = movies[index];\r\n  //   return (\r\n  //     <CellMeasurer cache={cache} parent={parent} key={key} columnIndex={0} rowIndex={index}>\r\n  //       {({ measure }) => (\r\n  //         <div style={style}>\r\n  //           <MovieItem movie={movie} onLoad={measure} />\r\n  //         </div>\r\n  //       )}\r\n  //     </CellMeasurer>\r\n  //   );\r\n  // };\r\n\r\n  // return (\r\n  //   <WindowScroller>\r\n  //     {({ height, scrollTop, isScrolling, onChildScroll }) => (\r\n  //       <AutoSizer disableHeight>\r\n  //         {({ width }) => {\r\n  //           console.log(width);\r\n  //           return (\r\n  //             <List\r\n  //               ref={listRef}\r\n  //               isScrolling={isScrolling}\r\n  //               onScroll={onChildScroll}\r\n  //               scrollTop={scrollTop}\r\n  //               autoHeight\r\n  //               width={width}\r\n  //               height={height}\r\n  //               rowCount={movies.length}\r\n  //               rowHeight={cache.rowHeight}\r\n  //               rowRenderer={rowRenderer}\r\n  //               list={movies}\r\n  //               deferredMeasurementCache={cache}\r\n  //               style={{ outline: 'none' }}\r\n  //             />\r\n  //           );\r\n  //         }}\r\n  //       </AutoSizer>\r\n  //     )}\r\n  //   </WindowScroller>\r\n  // );\r\n  return <div className={styles['movie-list']}>{list}</div>;\r\n}\r\n\r\nexport default React.memo(MovieList);\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nfunction useScroll() {\r\n  const [scrollEnd, setScrollEnd] = useState<boolean>(false);\r\n  const { loading } = useSelector((state: RootState) => state.movie);\r\n\r\n  const handleScroll = () => {\r\n    // 화면에 보이지 않은 높이도 포함된 페이지의 총 높이.\r\n    const scrollHeight: number = document.documentElement.scrollHeight;\r\n    // 이미 스크롤 되어서 보이지 않은 구간의 높이.\r\n    const scrollTop: number = document.documentElement.scrollTop;\r\n    // 사용자에게 보여지는 페이지의 높이.\r\n    const clientHeight: number = document.documentElement.clientHeight;\r\n    setScrollEnd(scrollTop + clientHeight >= scrollHeight && !loading);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // scroll event listener 등록\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      // scroll event listener 해제\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  });\r\n  return { scrollEnd, setScrollEnd, handleScroll };\r\n}\r\nexport default useScroll;\r\n","import { createAction, ActionType, createReducer, createAsyncAction } from 'typesafe-actions';\r\nimport { takeEvery, call, put, delay } from 'redux-saga/effects';\r\nimport { Movie } from '../types/Movie';\r\nimport * as api from '../api/movie';\r\n\r\nconst GET_MOVIES = 'movies/GET_MOVIES' as const;\r\nconst GET_MOVIES_SUCCESS = 'moives/GET_MOIVES_SUCCESS' as const;\r\nconst GET_MOVIES_ERROR = 'movies/GET_MOVIES_ERROR' as const;\r\n\r\nexport const getMovies = createAction(GET_MOVIES)<any>();\r\nexport const getMoviesSuccess = createAction(GET_MOVIES_SUCCESS)<any>();\r\nexport const getMoviesError = createAction(GET_MOVIES_ERROR)<any | null>();\r\n\r\nconst actions = {\r\n  getMovies,\r\n  getMoviesSuccess,\r\n  getMoviesError,\r\n};\r\n\r\ntype Actions = ActionType<typeof actions>;\r\n\r\ntype Response = {\r\n  data: any;\r\n};\r\n\r\ntype State = {\r\n  movies: Movie[];\r\n  loading: boolean;\r\n  error: boolean;\r\n  page: number;\r\n};\r\n\r\nconst initState: State = {\r\n  movies: [],\r\n  loading: false,\r\n  error: false,\r\n  page: 1,\r\n};\r\n\r\nfunction* get_movies_saga(action: any) {\r\n  try {\r\n    const { page } = action.payload;\r\n    const res: Response = yield api.requestGetMovieList(page);\r\n    console.log(res);\r\n    if (res?.data?.data) {\r\n      yield put({\r\n        type: GET_MOVIES_SUCCESS,\r\n        payload: res.data.data.movies,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_MOVIES_ERROR,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* movie_saga() {\r\n  yield takeEvery(GET_MOVIES, get_movies_saga);\r\n}\r\n\r\nconst movie = createReducer<State, Actions>(initState, {\r\n  [GET_MOVIES]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      error: false,\r\n    };\r\n  },\r\n  [GET_MOVIES_SUCCESS]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      movies: state.movies.concat(action.payload),\r\n      loading: false,\r\n      error: false,\r\n      page: state.page + 1,\r\n    };\r\n  },\r\n  [GET_MOVIES_ERROR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      movies: [],\r\n      loading: false,\r\n      error: false,\r\n    };\r\n  },\r\n});\r\n\r\nexport type RooteState = ReturnType<typeof movie>;\r\nexport default movie;\r\n","import { useEffect } from 'react';\r\nimport styles from './MovieContainer.module.scss';\r\nimport MovieList from '../component/MovieList';\r\nimport useScroll from '../hooks/useScroll';\r\n//hooks\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useLoading from '../hooks/useLoading';\r\n\r\n//store\r\nimport { RootState } from '../store';\r\nimport { getMovies } from '../store/movies';\r\n\r\nfunction MovieListContainer() {\r\n  const { movies, loading, page } = useSelector((state: RootState) => state.movie);\r\n  const dispatch = useDispatch();\r\n\r\n  const { scrollEnd } = useScroll();\r\n  const { handleLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    console.log(scrollEnd);\r\n    if (scrollEnd) {\r\n      dispatch(getMovies({ page }));\r\n    }\r\n  }, [scrollEnd]);\r\n\r\n  useEffect(() => {\r\n    handleLoading(loading);\r\n  }, [loading]);\r\n\r\n  return <div className={styles['container']}>{movies.length !== 0 && <MovieList movies={movies} />}</div>;\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import MovieListContainer from '../container/MovieListContainer';\r\n\r\nfunction MovieList(){\r\n    return(\r\n        <MovieListContainer/>\r\n    )\r\n}\r\n\r\nexport default MovieList;","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useLoading from '../hooks/useLoading';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n  const { loading } = useLoading();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={loading}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","import './App.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Movie, MovieList } from './page';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//components\r\nimport Loading from './component/Loading';\r\nimport { getMovies } from './store/movies';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovies({ page: 1 }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename=\"movie-card\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MovieList} />\r\n          <Route path=\"/detail/:id?\" component={Movie} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Loading />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface CounterState {\r\n  value: number\r\n}\r\n\r\nconst initialState = {\r\n  value: 0,\r\n} as CounterState\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement:(state)=>{\r\n        state.value-=1\r\n    },\r\n    incrementByAmount:(state,action:PayloadAction<number>)=>{\r\n        state.value+=action.payload;\r\n    }\r\n  },\r\n})\r\n\r\n\r\n\r\nexport const {increment,decrement,incrementByAmount} = counterSlice.actions;\r\nexport default counterSlice.reducer;","import { combineReducers } from 'redux';\r\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport movie, { movie_saga, RooteState } from './movies';\r\nimport loading from './loading';\r\nimport counter from './counter';\r\n\r\nimport { all } from 'redux-saga/effects';\r\n\r\nconst rootReducer = combineReducers({ movie, loading, counter });\r\n\r\nexport function* rootSaga() {\r\n  yield all([movie_saga()]);\r\n}\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<RooteState> = useSelector;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer,{rootSaga} from './store/index';\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const store = createStore(rootReducer,applyMiddleware(sagaMiddleware));\r\n\r\nconst devMode = process.env.NODE_ENV === 'development';\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware],\r\n    devTools: devMode,\r\n});\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MovieContainer_content__snO3N\",\"movie-poster\":\"MovieContainer_movie-poster__3IPA3\",\"mobile-wrap\":\"MovieContainer_mobile-wrap__2LIsa\",\"mobile-movie-poster\":\"MovieContainer_mobile-movie-poster__2su2P\",\"movie-content\":\"MovieContainer_movie-content__3o2Ag\",\"movie-title\":\"MovieContainer_movie-title__1hyow\",\"container\":\"MovieContainer_container__2iYp3\",\"movie-descript\":\"MovieContainer_movie-descript__1hzQS\",\"test\":\"MovieContainer_test__RNK6q\",\"filter\":\"MovieContainer_filter__2QIr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list\":\"MovieList_movie-list__3Sg-Y\",\"movie-item\":\"MovieList_movie-item__3HnOo\",\"movie-block\":\"MovieList_movie-block__2brfd\",\"movie-title\":\"MovieList_movie-title__2f0hr\",\"movie-description\":\"MovieList_movie-description__3UDlF\",\"movie-poster\":\"MovieList_movie-poster__3bc5t\"};"],"sourceRoot":""}