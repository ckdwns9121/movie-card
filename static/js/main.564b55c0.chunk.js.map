{"version":3,"sources":["api/movie.ts","component/Loading.tsx","container/MovieContainer.tsx","page/Movie.tsx","component/MovieList.tsx","hooks/useScroll.ts","container/MovieListContainer.tsx","page/MovieList.tsx","App.tsx","reportWebVitals.ts","store/movies.ts","store/loading.ts","store/counter.ts","store/index.ts","index.tsx","container/MovieContainer.module.scss","component/MovieList.module.scss"],"names":["getMovieAPI","id","a","URL","axios","get","res","data","movie","getMoviesAPI","page","movies","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","Loading","loading","classes","Backdrop","className","open","CircularProgress","MovieContainer","useState","height","setHeight","setOpen","useQuery","isLoading","error","state","scrollControl","scroll","window","scrollY","useEffect","scrollTo","addEventListener","removeEventListener","styles","src","large_cover_image","alt","title","style","backgroundImage","transform","filter","onClick","title_long","description_full","Movie","match","params","CellMeasurerCache","defaultWidth","fixedWidth","MovieItem","onLoad","history","useHistory","medium_cover_image","rating","ButtonBase","push","MovieList","list","map","React","memo","timer","useScroll","scrollEnd","setScrollEnd","handleScroll","useCallback","scrollHeight","document","documentElement","scrollTop","clientHeight","throttle","setTimeout","MovieListContainer","useInfiniteQuery","pageParam","getNextPageParam","lastPage","pages","length","fetchNextPage","hasNextPage","fetchPreviousPage","isFetchingNextPage","hasPreviousPage","isFetchingPreviousPage","i","queryClient","QueryClient","App","client","basename","process","exact","path","component","initialIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","get_movies_saga","movie_saga","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","createAction","action","payload","api","put","type","takeEvery","createReducer","concat","loadingSlice","createSlice","name","initialState","success","reducers","actions","counterSlice","value","increment","decrement","incrementByAmount","rootSaga","all","rootReducer","combineReducers","counter","useSelector","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","devTools","run","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.564b55c0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getMovieAPI = async (id: string): Promise<any> => {\r\n  const URL = `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`;\r\n  const res = await axios.get(URL);\r\n  return res.data.data.movie;\r\n};\r\n\r\nexport const getMoviesAPI = async (page: number): Promise<any> => {\r\n  const URL = `https://yts-proxy.now.sh/list_movies.json?limit=24&&sort_by=download_count&page=${page}`;\r\n  const res = await axios.get(URL);\r\n  return res.data.data.movies;\r\n};\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function Loading({ loading }: { loading: boolean }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={loading}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n","//hooks\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport styles from './MovieContainer.module.scss';\r\nimport { useQuery } from 'react-query';\r\nimport { Movie } from '../types/Movie';\r\n//api\r\nimport { getMovieAPI } from '../api/movie';\r\n\r\nimport Loading from '../component/Loading';\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\n\r\ninterface data extends Movie {\r\n  background_image: string;\r\n  background_image_original: string;\r\n  date_uploaded: string;\r\n  date_uploaded_unix: number;\r\n  description_intro: string;\r\n  download_count: number;\r\n  genres: string[] | undefined;\r\n  imdb_code: string;\r\n  language: string;\r\n  large_cover_image: string;\r\n  like_count: number;\r\n  mpa_rating: string;\r\n  runtime: number;\r\n  slug: string;\r\n  small_cover_image: string;\r\n  title_english: string;\r\n  title_long: string;\r\n  torrents: object[];\r\n  url: string;\r\n  year: number;\r\n  yt_trailer_code: string;\r\n}\r\nfunction MovieContainer({ id }: Props) {\r\n  const [height, setHeight] = useState<number>(1);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const { isLoading, data, error } = useQuery(['movie', id], () => getMovieAPI(id));\r\n  const state = data;\r\n  const scrollControl = () => {\r\n    let scroll = window.scrollY;\r\n    setHeight(scroll);\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    window.addEventListener('scroll', scrollControl);\r\n    return () => window.removeEventListener('scroll', scrollControl);\r\n  }, []);\r\n\r\n  if (isLoading) return <Loading loading={isLoading} />;\r\n  if (error) return <>An error has occurred</>;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles['container']}>\r\n        <div className={styles['content']}>\r\n          <div className={styles['movie-poster']}>\r\n            <img src={state?.large_cover_image} alt={state?.title} />\r\n          </div>\r\n          <div className={styles['mobile-wrap']}>\r\n            <div\r\n              className={styles['mobile-movie-poster']}\r\n              style={{\r\n                backgroundImage: `url(${state?.large_cover_image})`,\r\n                transform: `translate3d(0%,${height / 100}% ,0) scale(${100 + height / 2 / 10}%)`,\r\n                filter: `blur(${height / 100}px)`,\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles['movie-content']}>\r\n            <div className={styles['movie-title']} onClick={() => setOpen(!open)}>\r\n              {state?.title_long}\r\n            </div>\r\n            <div className={styles['movie-descript']}>\r\n              {state?.description_full}\r\n              {state?.description_full}\r\n\r\n              {state?.description_full}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","import MovieContainer from '../container/MovieContainer';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\n\r\ninterface MatchParams{\r\n    id: string\r\n}\r\n\r\nfunction Movie({match} :RouteComponentProps<MatchParams>){\r\n    const {id}= match.params;\r\n    return(\r\n        <MovieContainer id={id}/>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React, { useCallback, useRef } from 'react';\r\nimport styles from './MovieList.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ButtonBase } from '@material-ui/core';\r\nimport { WindowScroller, CellMeasurer, CellMeasurerCache, AutoSizer, List, ListRowProps } from 'react-virtualized';\r\n\r\nimport { Movie } from '../types/Movie';\r\n\r\ntype MovieItemProps = {\r\n  movie: Movie;\r\n  onLoad?: any;\r\n};\r\ntype MovieListProps = {\r\n  movies: Movie[];\r\n};\r\n\r\nconst cache = new CellMeasurerCache({\r\n  defaultWidth: 50,\r\n  fixedWidth: true,\r\n});\r\n\r\nfunction MovieItem({ movie, onLoad }: MovieItemProps) {\r\n  const history = useHistory();\r\n\r\n  const { id, medium_cover_image, title, rating, description_full } = movie;\r\n\r\n  const onClickItem = () => {\r\n    history.push(`/detail/${id}`);\r\n  };\r\n  return (\r\n    <ButtonBase className={styles['movie-item']} onClick={onClickItem}>\r\n      <div className={styles['movie-block']}>\r\n        <div className={styles['movie-poster']}>\r\n          <img src={medium_cover_image} alt={title} onLoad={onLoad} />\r\n        </div>\r\n        <div className={styles['movie-title']}>{title}</div>\r\n        <div className={styles['movie-description']}>{description_full}</div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n}\r\n\r\nfunction MovieList({ movies }: any) {\r\n  const list = movies.map((movie: Movie) => <MovieItem key={movie.id} movie={movie} />);\r\n  // const listRef = useRef<List | null>(null);\r\n\r\n  // const rowRenderer = ({ index, key, parent, style }: ListRowProps) => {\r\n  //   const movie = movies[index];\r\n  //   return (\r\n  //     <CellMeasurer cache={cache} parent={parent} key={key} columnIndex={0} rowIndex={index}>\r\n  //       {({ measure }) => (\r\n  //         <div style={style}>\r\n  //           <MovieItem movie={movie} onLoad={measure} />\r\n  //         </div>\r\n  //       )}\r\n  //     </CellMeasurer>\r\n  //   );\r\n  // };\r\n\r\n  // return (\r\n  //   <WindowScroller>\r\n  //     {({ height, scrollTop, isScrolling, onChildScroll }) => (\r\n  //       <AutoSizer disableHeight>\r\n  //         {({ width }) => {\r\n  //           console.log(width);\r\n  //           return (\r\n  //             <List\r\n  //               ref={listRef}\r\n  //               isScrolling={isScrolling}\r\n  //               onScroll={onChildScroll}\r\n  //               scrollTop={scrollTop}\r\n  //               autoHeight\r\n  //               width={width}\r\n  //               height={height}\r\n  //               rowCount={movies.length}\r\n  //               rowHeight={cache.rowHeight}\r\n  //               rowRenderer={rowRenderer}\r\n  //               list={movies}\r\n  //               deferredMeasurementCache={cache}\r\n  //               style={{ outline: 'none' }}\r\n  //             />\r\n  //           );\r\n  //         }}\r\n  //       </AutoSizer>\r\n  //     )}\r\n  //   </WindowScroller>\r\n  // );\r\n  return <div className={styles['movie-list']}>{list}</div>;\r\n}\r\n\r\nexport default React.memo(MovieList);\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nlet timer: any = null;\r\n\r\nfunction useScroll() {\r\n  const [scrollEnd, setScrollEnd] = useState<boolean>(false);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    // 화면에 보이지 않은 높이도 포함된 페이지의 총 높이.\r\n    const scrollHeight: number = document.documentElement.scrollHeight;\r\n    // 이미 스크롤 되어서 보이지 않은 구간의 높이.\r\n    const scrollTop: number = document.documentElement.scrollTop;\r\n    // 사용자에게 보여지는 페이지의 높이.\r\n    const clientHeight: number = document.documentElement.clientHeight;\r\n    setScrollEnd(scrollTop + clientHeight >= scrollHeight);\r\n  }, []);\r\n  const throttle = useCallback(() => {\r\n    if (timer) return;\r\n    timer = setTimeout(() => {\r\n      handleScroll();\r\n      timer = null;\r\n    }, 300);\r\n  }, [handleScroll]);\r\n  useEffect(() => {\r\n    // scroll event listener 등록\r\n    window.addEventListener('scroll', throttle);\r\n    return () => {\r\n      // scroll event listener 해제\r\n      window.removeEventListener('scroll', throttle);\r\n    };\r\n  }, [throttle]);\r\n  return { scrollEnd, setScrollEnd, handleScroll };\r\n}\r\nexport default useScroll;\r\n","import { useEffect, useState } from 'react';\r\nimport styles from './MovieContainer.module.scss';\r\nimport MovieList from '../component/MovieList';\r\nimport { useQuery, useInfiniteQuery } from 'react-query';\r\n\r\nimport { getMoviesAPI } from '../api/movie';\r\n\r\nimport Loading from '../component/Loading';\r\nimport useScroll from '../hooks/useScroll';\r\nfunction MovieListContainer() {\r\n  const {\r\n    isLoading,\r\n    error,\r\n    data,\r\n    fetchNextPage,\r\n    fetchPreviousPage,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    isFetchingNextPage,\r\n    isFetchingPreviousPage,\r\n    ...result\r\n  } = useInfiniteQuery('movies', ({ pageParam = 1 }) => getMoviesAPI(pageParam), {\r\n    getNextPageParam: (lastPage, pages) => {\r\n      return pages.length + 1;\r\n    },\r\n  });\r\n\r\n  const { scrollEnd } = useScroll();\r\n\r\n  useEffect(() => {\r\n    if (scrollEnd) {\r\n      fetchNextPage();\r\n    }\r\n  }, [scrollEnd]);\r\n  if (isLoading) return <Loading loading={isLoading} />;\r\n  if (error) return <>An error has occurred</>;\r\n  return (\r\n    <div className={styles['container']}>\r\n      {data?.pages.map((movies, i) => {\r\n        return <MovieList key={i} movies={movies} />;\r\n      })}\r\n      <div className={styles['loading']}>{isFetchingNextPage ? 'Loading more...' : hasNextPage ? 'Load More' : 'Nothing more to load'}</div>\r\n      {/* <button onClick={() => fetchNextPage()} disabled={!hasNextPage || isFetchingNextPage}>\r\n        {isFetchingNextPage ? 'Loading more...' : hasNextPage ? 'Load More' : 'Nothing more to load'}\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import MovieListContainer from '../container/MovieListContainer';\r\n\r\nfunction MovieList(){\r\n    return(\r\n        <MovieListContainer/>\r\n    )\r\n}\r\n\r\nexport default MovieList;","import './App.scss';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Movie, MovieList } from './page';\r\n\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ReactQueryDevtools } from 'react-query/devtools';\r\n\r\nconst queryClient = new QueryClient();\r\nfunction App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"App\">\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MovieList} />\r\n            <Route path=\"/detail/:id?\" component={Movie} />\r\n          </Switch>\r\n          <ReactQueryDevtools initialIsOpen={process.env.NODE_ENV === 'development'} />\r\n        </BrowserRouter>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createAction, ActionType, createReducer, createAsyncAction } from 'typesafe-actions';\r\nimport { takeEvery, call, put, delay } from 'redux-saga/effects';\r\nimport { Movie } from '../types/Movie';\r\nimport * as api from '../api/movie';\r\n\r\nconst GET_MOVIES = 'movies/GET_MOVIES' as const;\r\nconst GET_MOVIES_SUCCESS = 'moives/GET_MOIVES_SUCCESS' as const;\r\nconst GET_MOVIES_ERROR = 'movies/GET_MOVIES_ERROR' as const;\r\n\r\nexport const getMovies = createAction(GET_MOVIES)<any>();\r\nexport const getMoviesSuccess = createAction(GET_MOVIES_SUCCESS)<any>();\r\nexport const getMoviesError = createAction(GET_MOVIES_ERROR)<any | null>();\r\n\r\nconst actions = {\r\n  getMovies,\r\n  getMoviesSuccess,\r\n  getMoviesError,\r\n};\r\n\r\ntype Actions = ActionType<typeof actions>;\r\n\r\ntype Response = {\r\n  data: any;\r\n};\r\n\r\ntype State = {\r\n  movies: Movie[];\r\n  loading: boolean;\r\n  error: boolean;\r\n  page: number;\r\n};\r\n\r\nconst initState: State = {\r\n  movies: [],\r\n  loading: false,\r\n  error: false,\r\n  page: 1,\r\n};\r\n\r\nfunction* get_movies_saga(action: any) {\r\n  try {\r\n    const { page } = action.payload;\r\n    const res: Response = yield api.getMoviesAPI(page);\r\n    if (res?.data?.data) {\r\n      yield put({\r\n        type: GET_MOVIES_SUCCESS,\r\n        payload: res.data.data.movies,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_MOVIES_ERROR,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* movie_saga() {\r\n  yield takeEvery(GET_MOVIES, get_movies_saga);\r\n}\r\n\r\nconst movie = createReducer<State, Actions>(initState, {\r\n  [GET_MOVIES]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      error: false,\r\n    };\r\n  },\r\n  [GET_MOVIES_SUCCESS]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      movies: state.movies.concat(action.payload),\r\n      loading: false,\r\n      error: false,\r\n      page: state.page + 1,\r\n    };\r\n  },\r\n  [GET_MOVIES_ERROR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      movies: [],\r\n      loading: false,\r\n      error: false,\r\n    };\r\n  },\r\n});\r\n\r\nexport type RooteState = ReturnType<typeof movie>;\r\nexport default movie;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface LoadingState {\r\n  loading: boolean;\r\n  success: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: false,\r\n  error: false,\r\n} as LoadingState;\r\n\r\nexport const loadingSlice = createSlice({\r\n  name: 'loading',\r\n  initialState,\r\n  reducers: {\r\n    loading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loading } = loadingSlice.actions;\r\nexport default loadingSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface CounterState {\r\n  value: number\r\n}\r\n\r\nconst initialState = {\r\n  value: 0,\r\n} as CounterState\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement:(state)=>{\r\n        state.value-=1\r\n    },\r\n    incrementByAmount:(state,action:PayloadAction<number>)=>{\r\n        state.value+=action.payload;\r\n    }\r\n  },\r\n})\r\n\r\n\r\n\r\nexport const {increment,decrement,incrementByAmount} = counterSlice.actions;\r\nexport default counterSlice.reducer;","import { combineReducers } from 'redux';\r\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport movie, { movie_saga, RooteState } from './movies';\r\nimport loading from './loading';\r\nimport counter from './counter';\r\n\r\nimport { all } from 'redux-saga/effects';\r\n\r\nconst rootReducer = combineReducers({ movie, loading, counter });\r\n\r\nexport function* rootSaga() {\r\n  yield all([movie_saga()]);\r\n}\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<RooteState> = useSelector;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer,{rootSaga} from './store/index';\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// const store = createStore(rootReducer,applyMiddleware(sagaMiddleware));\r\n\r\nconst devMode = process.env.NODE_ENV === 'development';\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware],\r\n    devTools: devMode,\r\n});\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MovieContainer_content__snO3N\",\"movie-poster\":\"MovieContainer_movie-poster__3IPA3\",\"mobile-wrap\":\"MovieContainer_mobile-wrap__2LIsa\",\"mobile-movie-poster\":\"MovieContainer_mobile-movie-poster__2su2P\",\"movie-content\":\"MovieContainer_movie-content__3o2Ag\",\"movie-title\":\"MovieContainer_movie-title__1hyow\",\"container\":\"MovieContainer_container__2iYp3\",\"loading\":\"MovieContainer_loading__Z19bv\",\"movie-descript\":\"MovieContainer_movie-descript__1hzQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list\":\"MovieList_movie-list__3Sg-Y\",\"movie-item\":\"MovieList_movie-item__3HnOo\",\"movie-block\":\"MovieList_movie-block__2brfd\",\"movie-title\":\"MovieList_movie-title__2f0hr\",\"movie-description\":\"MovieList_movie-description__3UDlF\",\"movie-poster\":\"MovieList_movie-poster__3bc5t\"};"],"sourceRoot":""}